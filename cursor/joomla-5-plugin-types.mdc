---
description:
globs:
alwaysApply: false
---

# Joomla 5 Plugin Types â€“ Cursor Rules

## Overview

Joomla 5 plugins are grouped by type (group). Each type has unique responsibilities, events, and integration behavior.

When creating a plugin, always:
- Place it under: `plugins/<type>/<element>/`
- Extend: `CMSPlugin`
- Use namespace: `Joomla\Plugin\<type>\<element>`
- Trigger only the relevant events for the type

---

## Plugin Type: `system`

- **Use Case**: Site-wide behavior, output modification, route logic
- **Triggers**: `onAfterInitialise`, `onAfterRoute`, `onBeforeRender`, `onAfterRender`
- **Folder**: `plugins/system/<element>/`
- **Example**: Maintenance mode, debug toolbar, cookie control

---

## Plugin Type: `content`

- **Use Case**: Modify article body before or after display/save
- **Triggers**:
  - `onContentPrepare`
  - `onContentBeforeSave`
  - `onContentAfterSave`
- **Folder**: `plugins/content/<element>/`
- **Example**: Embed videos, add footnotes, modify text

---

## Plugin Type: `authentication`

- **Use Case**: Validate login credentials against internal or external sources
- **Triggers**: `onUserAuthenticate`
- **Folder**: `plugins/authentication/<element>/`
- **Response Class**: `AuthenticationResponse`
- **Example**: LDAP, SSO, API login systems

---

## Plugin Type: `editors-xtd`

- **Use Case**: Add buttons below the editor (e.g., article, image)
- **Triggers**: `onDisplay`
- **Output**: HTML button markup
- **Folder**: `plugins/editors-xtd/<element>/`
- **Example**: Insert shortcode, custom modal button

---

## Plugin Type: `finder`

- **Use Case**: Smart Search integration for components
- **Extends**: `FinderIndexerAdapter`
- **Triggers**:
  - `onFinderAfterSave`
  - `onFinderAfterDelete`
- **Folder**: `plugins/finder/<element>/`
- **Example**: Index custom component data for com_finder

---

## Plugin Type: `installer`

- **Use Case**: Logic before/after installing another extension
- **Triggers**:
  - `onExtensionBeforeInstall`
  - `onExtensionAfterInstall`
  - `onExtensionBeforeUninstall`
- **Folder**: `plugins/installer/<element>/`
- **Example**: Dependency check, schema preload

---

## Plugin Type: `media`

- **Use Case**: Enhance file/media uploads in Media Manager
- **Triggers**: `MediaHelper::canUpload()`, or content events for validation
- **Folder**: `plugins/media/<element>/`
- **Example**: Restrict upload types, cloud uploads

---

## Plugin Type: `user`

- **Use Case**: Hook into registration, login, and user management
- **Triggers**:
  - `onUserBeforeSave`
  - `onUserAfterLogin`
  - `onUserAfterLogout`
  - `onUserBeforeDelete`
- **Folder**: `plugins/user/<element>/`
- **Example**: Log user activity, sync with CRM

---

## Plugin Type: `filesystem`

- **Use Case**: Provide custom filesystem adapters (e.g., SFTP, cloud storage)
- **Integration**: Service provider, filesystem config
- **Folder**: `plugins/filesystem/<element>/`
- **Example**: Amazon S3 integration, FTP override

---

## Plugin Class Structure (Generic)

```php
namespace Joomla\Plugin\<group>\<element>;

use Joomla\CMS\Plugin\CMSPlugin;

class Plg<Group><Element> extends CMSPlugin
{
    public function on<EventName>(...)
    {
        // Plugin logic
    }
}
