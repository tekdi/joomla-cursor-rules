---
description:
globs:
alwaysApply: false
---
# Joomla 5 Component Development – Core Integration Rules

## Component Architecture

- Follow Joomla 5's MVC structure under `admin/`, `site/`, `api/`
- Use namespaces: `Joomla\Component\<ComponentName>\<ClientType>\...`
- Use Joomla’s `MVCFactory` and proper model/view/controller base classes
- Include `config.xml`, `access.xml`, and `manifest XML` in root

---

## Core Component Integrations

### com_content (Articles)
- Create **custom content types** based on `com_content` structure
- Reuse article functionality such as publishing, aliasing, metadata, etc.
- Extend views while maintaining article edit/publish features

### com_categories
- Add `catid` column to your database table
- Include `<field name="catid" type="category" ...>` in your form XML
- Link categories in `access.xml` for ACL support
- Add `Categories` to your administrator submenu

### com_users
- Use `Factory::getApplication()->getIdentity()` for current user
- Check permissions using:  
  `authorise()`, `getAuthorisedCategories()`, `getAuthorisedGroups()`, `getAuthorisedViewLevels()`
- Avoid direct user data changes without validation

### com_media (Media Manager)
- Use `MediaHelper::canUpload()` to validate file uploads
- Store assets in:  
  `media/com_<component>` (images, JS, CSS)
- Use field type `media` in XML forms for image upload support

### com_menus
- Define menu item types in your manifest `<menu>` section
- Use `Joomla\CMS\Menu\AbstractMenu` to access menu data programmatically
- Allow linking to specific views or records in your component

### com_finder (Smart Search)
- Enable integration via **finder plugin**
- Create plugin with `FinderIndexerAdapter`
- Allow Smart Search indexing of your component’s content

### com_redirect
- No direct integration needed; relies on system plugin
- Ensure all routes use Joomla Router so com_redirect can track 404s
- Use SEF-safe URLs to benefit from redirects

### com_tags
- Include `tags` field in your form XML:
  `<field name="tags" type="tag" ...>`
- Add `tags` support to your tables
- Use `TagsHelper::getItemTags()` for display logic

### com_banners
- For ad support, integrate via module position or query banners directly
- Use banner client/category relationships when relevant
- Avoid duplicating banner management logic

### com_config (Global Configuration)
- Define settings in `config.xml`
- Use `$this->params->get('key')` to retrieve config values
- The Joomla backend will auto-generate configuration UI

### com_installer
- Manifest XML must include:
  - `<version>`, `<files>`, `<media>`, `<sql>`, `<updateservers>`
- Keep SQL schema files (`install.mysql.utf8.sql`, updates) in sync with database
- com_installer handles upgrade lifecycle based on these files

### com_admin
- Define administrator menu entries in manifest
- Use `backend` layout files to control admin UI rendering
- Place dashboards or overview screens under administrator

### com_modules
- Build associated modules that read your component’s data
- Modules can be placed via module positions for supplementary content
- Manage modules via `com_modules` backend

### com_plugins
- Dispatch custom events from your component (e.g., `onBeforeSaveMyItem`)
- Allow plugins to extend your component via plugin events
- Your component can ship with its own plugins under `/plugins/`

### com_templates
- Support template overrides: use `layout` files
- Load layouts using `LayoutHelper::render()`
- Never hardcode output markup; always render through tmpl views

---

## Developer Notes

- Always use Joomla’s helper functions and APIs when available
- Favor integration over duplication — reuse Joomla UI and systems
- Document integration points in your developer readme
- Ensure your manifest and routing support linking to related content (e.g., tagged views, categories)

