# Joomla 5 Standalone Extension Development

## Overview

Develop Joomla 5 extensions independently without requiring a full Joomla installation. This approach enables focused development, better version control, and easier distribution.

## Component Project Structure

```
my-component/
â”œâ”€â”€ admin/                      # Administrator interface files
â”‚   â”œâ”€â”€ forms/                  # Form XML files  
â”‚   â”œâ”€â”€ language/               # Admin language files
â”‚   â”œâ”€â”€ sql/                    # Database files
â”‚   â”œâ”€â”€ tmpl/                   # Admin template files
â”‚   â””â”€â”€ services/               # Service providers
â”œâ”€â”€ site/                       # Site interface files
â”‚   â”œâ”€â”€ language/               # Site language files
â”‚   â””â”€â”€ tmpl/                   # Site template files  
â”œâ”€â”€ api/                        # API interface files (optional)
â”œâ”€â”€ src/                        # âœ… ROOT LEVEL SOURCE CODE
â”‚   â”œâ”€â”€ Administrator/          # Admin namespace classes
â”‚   â”‚   â”œâ”€â”€ Controller/
â”‚   â”‚   â”œâ”€â”€ Model/
â”‚   â”‚   â”œâ”€â”€ View/
â”‚   â”‚   â””â”€â”€ Helper/
â”‚   â”œâ”€â”€ Site/                   # Site namespace classes
â”‚   â”‚   â”œâ”€â”€ Controller/
â”‚   â”‚   â”œâ”€â”€ Model/
â”‚   â”‚   â””â”€â”€ View/
â”‚   â””â”€â”€ Api/                    # API namespace classes (optional)
â”‚       â”œâ”€â”€ Controller/
â”‚       â””â”€â”€ View/
â”œâ”€â”€ media/                      # Assets (CSS, JS, images)
â”œâ”€â”€ language/                   # Root language files
â”œâ”€â”€ mycomponent.xml             # Component manifest
â”œâ”€â”€ access.xml                  # ACL definitions
â”œâ”€â”€ config.xml                  # Component configuration
â””â”€â”€ build.sh                   # Build script for packaging
```

## Quick Start

### 1. Create Project
```bash
mkdir my-component && cd my-component
```

### 2. Essential Guidelines
- **Namespace**: `Joomla\Component\YourComponent\Administrator\...`
- **Classes**: Put all PHP classes in `src/Administrator/`, `src/Site/`, `src/Api/`
- **Interface files**: Put templates, forms, SQL in `admin/`, `site/`, `api/` folders
- **Manifest**: Use `<namespace path="src">Joomla\Component\Yourcomponent</namespace>`

## Example Classes

### Administrator Controller
```php
<?php
namespace Joomla\Component\Mycomponent\Administrator\Controller;

use Joomla\CMS\MVC\Controller\BaseController;

class DisplayController extends BaseController
{
    // Controller implementation
}
```

### Site Model  
```php
<?php
namespace Joomla\Component\Mycomponent\Site\Model;

use Joomla\CMS\MVC\Model\ItemModel;

class ItemModel extends ItemModel
{
    // Model implementation
}
```

## Basic Manifest (mycomponent.xml)

```xml
<?xml version="1.0" encoding="utf-8"?>
<extension type="component" method="upgrade">
    <name>COM_MYCOMPONENT</name>
    <version>1.0.0</version>
    <description>COM_MYCOMPONENT_DESCRIPTION</description>
    
    <!-- KEY: Points to root src/ folder -->
    <namespace path="src">Joomla\Component\Mycomponent</namespace>
    
    <!-- Site files -->
    <files folder="site">
        <folder>tmpl</folder>
        <folder>language</folder>
    </files>
    
    <!-- Admin files -->
    <administration>
        <files folder="admin">
            <folder>forms</folder>
            <folder>tmpl</folder>
            <folder>sql</folder>
            <folder>services</folder>
            <folder>language</folder>
        </files>
        <menu>COM_MYCOMPONENT</menu>
    </administration>
    
    <!-- Source code -->
    <files>
        <folder>src</folder>
    </files>
    
    <!-- Assets -->
    <media folder="media" destination="com_mycomponent">
        <folder>css</folder>
        <folder>js</folder>
    </media>
</extension>
```

## Simple Build Script

Create `build.sh` to generate installable ZIP:

```bash
#!/bin/bash
# build.sh - Simple build script

COMPONENT_NAME="com_mycomponent"
VERSION="1.0.0"

# Clean and create directories
rm -rf build dist
mkdir -p build dist

# Copy ALL files (including src/ folder!)
cp -r admin build/
cp -r site build/
cp -r src build/          # âœ… Important: Copy src folder
cp -r media build/
cp -r language build/
cp *.xml build/

# Create ZIP package
cd build
zip -r ../dist/${COMPONENT_NAME}-${VERSION}.zip .
cd ..
rm -rf build

echo "âœ… Package created: dist/${COMPONENT_NAME}-${VERSION}.zip"
echo "ðŸš€ Ready for Joomla installation!"
```

## Usage

```bash
chmod +x build.sh    # Make executable
./build.sh           # Build package
```

Upload `dist/com_mycomponent-1.0.0.zip` via **Extensions > Manage > Install**

## Key Benefits

- âœ… **Focused development** - Work on extension without full Joomla setup
- âœ… **Better version control** - Clean, isolated repositories  
- âœ… **Easy distribution** - Generate installable ZIP packages
- âœ… **Team collaboration** - Multiple developers, separate projects

## Essential Rules

1. **Structure**: `src/` at component root, interface files in `admin/`/`site/`
2. **Namespace**: `<namespace path="src">Joomla\Component\Yourcomponent</namespace>`
3. **Security**: Always escape output, validate input, use CSRF tokens
4. **Packaging**: Include `src/` folder in build script
5. **Testing**: Test installation in clean Joomla environment
description:
globs:
alwaysApply: false
---
